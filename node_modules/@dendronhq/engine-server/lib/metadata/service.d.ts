import { GraphThemeEnum, TreeViewItemLabelTypeEnum } from "@dendronhq/common-all";
export declare enum ShowcaseEntry {
    TryMeetingNotes = "TryMeetingNotes",
    AutocompleteTip = "AutocompleteTip",
    TagsTip = "TagsTip",
    RenameHeader = "RenameHeader",
    TaskManagement = "TaskManagement",
    BlockRefs = "BlockRefs",
    HeaderRefs = "HeaderRefs",
    InsertNoteLink = "InsertNoteLink",
    GraphTheme = "GraphTheme",
    PublishTheme = "PublishTheme",
    GraphPanel = "GraphPanel"
}
declare type Metadata = Partial<{
    /**
     * When was dendron first installed
     */
    firstInstall: number;
    /**
     * When the first workspace was initialized
     */
    firstWsInitialize: number;
    /**
     * When the last time the lapsed user message was displayed to the user
     */
    lapsedUserMsgSendTime: number;
    /**
     * When the last time the inactive user message was displayed to the user
     */
    inactiveUserMsgSendTime: number;
    /**
     * The status of inactive user message. If submitted, we don't prompt again. If cancelled, we wait 2 weeks to send again.
     */
    inactiveUserMsgStatus: InactvieUserMsgStatusEnum;
    /**
     * The status of lapsed user message.
     */
    lapsedUserSurveyStatus: LapsedUserSurveyStatusEnum;
    /**
     * The status of initial survey.
     */
    initialSurveyStatus: InitialSurveyStatusEnum;
    /**
     * Set if a user has activated a dendron workspace
     */
    dendronWorkspaceActivated: number;
    /**
     * When the user first used lookup
     */
    firstLookupTime: number;
    /**
     * When the user last used lookup
     */
    lastLookupTime: number;
    /**
     * Time when the welcome button was clicked
     */
    welcomeClickedTime: number;
    /**
     * Time when feature showcase mssages have been shown.
     */
    featureShowcase: {
        [key in ShowcaseEntry]?: number;
    };
    /**
     * Global version of Dendron
     */
    version: string;
    /**
     *
     */
    workspaceActivationContext: WorkspaceActivationContext;
    /**
     * Which index of tip-of-the-day the user has last seen so that we can show
     * the user tips that they havent seen.
     */
    tipOfTheDayIndex: number;
    graphTheme?: GraphThemeEnum;
    /**
     * tree view item label type
     */
    treeViewItemLabelType: TreeViewItemLabelTypeEnum;
}>;
export declare enum InactvieUserMsgStatusEnum {
    submitted = "submitted",
    cancelled = "cancelled"
}
export declare enum InitialSurveyStatusEnum {
    submitted = "submitted",
    cancelled = "cancelled"
}
export declare enum LapsedUserSurveyStatusEnum {
    submitted = "submitted",
    cancelled = "cancelled"
}
export declare enum WorkspaceActivationContext {
    "normal" = 0,
    "tutorial" = 1,
    "seedBrowser" = 2
}
export declare class MetadataService {
    static instance(): MetadataService;
    static metaFilePath(): string;
    deleteMeta(key: keyof Metadata): void;
    getMeta(): Metadata;
    getFeatureShowcaseStatus(key: ShowcaseEntry): number | undefined;
    getGlobalVersion(): string;
    getLapsedUserSurveyStatus(): LapsedUserSurveyStatusEnum | undefined;
    getActivationContext(): WorkspaceActivationContext;
    get TipOfDayIndex(): number | undefined;
    getGraphTheme(): GraphThemeEnum | undefined;
    getTreeViewItemLabelType(): TreeViewItemLabelTypeEnum;
    setMeta(key: keyof Metadata, value: any): void;
    /**
     * Set first install logic
     *  ^o4y7ijuvi5nv
     */
    setInitialInstall(time?: number): void;
    setFirstWsInitialize(): void;
    setLapsedUserMsgSendTime(): void;
    setDendronWorkspaceActivated(): void;
    setFirstLookupTime(): void;
    setLastLookupTime(): void;
    setInactiveUserMsgSendTime(): void;
    setInactiveUserMsgStatus(value: InactvieUserMsgStatusEnum): void;
    setInitialSurveyStatus(value: InitialSurveyStatusEnum): void;
    setLapsedUserSurveyStatus(value: LapsedUserSurveyStatusEnum): void;
    setGlobalVersion(value: string): void;
    setFeatureShowcaseStatus(key: ShowcaseEntry): void;
    setActivationContext(context: WorkspaceActivationContext): void;
    set TipOfDayIndex(index: number | undefined);
    setGraphTheme(graphTheme: GraphThemeEnum): void;
    setTreeViewItemLabelType(labelType: TreeViewItemLabelTypeEnum): void;
}
export {};
