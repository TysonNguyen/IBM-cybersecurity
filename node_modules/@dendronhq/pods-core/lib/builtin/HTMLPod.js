"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HTMLPublishPod = void 0;
const common_all_1 = require("@dendronhq/common-all");
const engine_server_1 = require("@dendronhq/engine-server");
const basev3_1 = require("../basev3");
const utils_1 = require("../utils");
const ID = "dendron.html";
class HTMLPublishPod extends basev3_1.PublishPod {
    get config() {
        return utils_1.PodUtils.createPublishConfig({
            required: [],
            properties: {
                convertLinks: {
                    description: "convert Links to href",
                    type: "boolean",
                    default: true,
                    nullable: true,
                },
                convertTagNotesToLinks: {
                    type: "boolean",
                    default: false,
                    nullable: true,
                },
                convertUserNotesToLinks: {
                    type: "boolean",
                    default: false,
                    nullable: true,
                },
            },
        });
    }
    async plant(opts) {
        const { config, engine, note } = opts;
        const { fname, convertLinks = true, convertTagNotesToLinks = false, convertUserNotesToLinks = false, } = config;
        const { data: econfig } = await engine.getConfig();
        const overrideConfig = { ...econfig };
        const workspaceConfig = common_all_1.ConfigUtils.getWorkspace(overrideConfig);
        workspaceConfig.enableUserTags = convertUserNotesToLinks;
        workspaceConfig.enableHashTags = convertTagNotesToLinks;
        const proc = engine_server_1.MDUtilsV5.procRehypeFull({
            engine,
            vault: note.vault,
            fname,
            config: overrideConfig,
            wikiLinksOpts: { convertLinks },
        });
        const { contents } = await proc.processSync(note.body);
        return contents;
    }
}
exports.HTMLPublishPod = HTMLPublishPod;
HTMLPublishPod.id = ID;
HTMLPublishPod.description = "publish html";
//# sourceMappingURL=HTMLPod.js.map